import tkinter as tk
from tkinter import messagebox, filedialog, scrolledtext
import webbrowser
from datetime import datetime
import os

def generate_resume(username, skills, experience, education):
    resume_content = f"""# üéØ –û —Å–µ–±–µ {username}

## üë§ –û–±–æ –º–Ω–µ
–ü—Ä–∏–≤–µ—Ç! –Ø {username}, –Ω–∞—á–∏–Ω–∞—é—â–∏–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫.

## üõ†Ô∏è –ù–∞–≤—ã–∫–∏
{skills}

## üíº –û–ø—ã—Ç 
{experience}

## üéì –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
{education}

## üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
- **–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è**: {datetime.now().strftime("%d.%m.%Y %H:%M")}
- **–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞**: GitHub

## üîó –°—Å—ã–ª–∫–∏
- [–ú–æ–π GitHub](https://github.com/{username})

---
*–†–µ–∑—é–º–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏* üöÄ
"""
    return resume_content

def create_gui():
    window = tk.Tk()
    window.title("üöÄ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ê–Ω–∫–µ—Ç—ã –æ —Å–µ–±–µ –¥–ª—è GitHub")
    window.geometry("700x600")  # –£–≤–µ–ª–∏—á–∏–º –æ–∫–Ω–æ
    window.configure(bg="#f0f0f0")
    
    # –°–æ–∑–¥–∞–µ–º frame —Å –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π
    main_frame = tk.Frame(window, bg="#f0f0f0")
    main_frame.pack(fill="both", expand=True, padx=10, pady=10)
    
    # Canvas –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
    canvas = tk.Canvas(main_frame, bg="#f0f0f0")
    scrollbar = tk.Scrollbar(main_frame, orient="vertical", command=canvas.yview)
    scrollable_frame = tk.Frame(canvas, bg="#f0f0f0")
    
    scrollable_frame.bind(
        "<Configure>",
        lambda e: canvas.configure(scrollregion=canvas.bbox("all"))
    )
    
    canvas.create_window((0, 0), window=scrollable_frame, anchor="nw")
    canvas.configure(yscrollcommand=scrollbar.set)
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    title_label = tk.Label(
        scrollable_frame, 
        text="üìù –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ê–Ω–∫–µ—Ç—ã –¥–ª—è GitHub", 
        font=("Arial", 16, "bold"),
        bg="#f0f0f0",
        fg="#333333"
    )
    title_label.pack(pady=15)
    
    # –§—Ä–µ–π–º –¥–ª—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
    input_frame = tk.LabelFrame(
        scrollable_frame, 
        text=" üìã –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ ", 
        font=("Arial", 11, "bold"),
        bg="#f0f0f0",
        padx=10,
        pady=10
    )
    input_frame.pack(fill="x", pady=10, padx=5)
    
    # –ü–æ–ª–µ –¥–ª—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è GitHub
    tk.Label(input_frame, text="üë§ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è GitHub:", 
             bg="#f0f0f0", font=("Arial", 10)).grid(row=0, column=0, sticky="w", pady=8)
    username_entry = tk.Entry(input_frame, width=40, font=("Arial", 10))
    username_entry.grid(row=0, column=1, pady=8, padx=10)
    
    # –ü–æ–ª–µ –¥–ª—è –Ω–∞–≤—ã–∫–æ–≤
    tk.Label(input_frame, text="üõ†Ô∏è–í–∞—à–∏ –Ω–∞–≤—ã–∫–∏:", 
             bg="#f0f0f0", font=("Arial", 10)).grid(row=1, column=0, sticky="w", pady=8)
    skills_entry = tk.Entry(input_frame, width=40, font=("Arial", 10))
    skills_entry.grid(row=1, column=1, pady=8, padx=10)
    
    # –ü–æ–ª–µ –¥–ª—è –æ–ø—ã—Ç–∞ 
    tk.Label(input_frame, text="üíº –û–ø—ã—Ç :", 
             bg="#f0f0f0", font=("Arial", 10)).grid(row=2, column=0, sticky="w", pady=8)
    experience_entry = tk.Entry(input_frame, width=40, font=("Arial", 10))
    experience_entry.grid(row=2, column=1, pady=8, padx=10)
    
    # –ü–æ–ª–µ –¥–ª—è –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
    tk.Label(input_frame, text="üéì –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ:", 
             bg="#f0f0f0", font=("Arial", 10)).grid(row=3, column=0, sticky="w", pady=8)
    education_entry = tk.Entry(input_frame, width=40, font=("Arial", 10))
    education_entry.grid(row=3, column=1, pady=8, padx=10)
    
    # –ö–Ω–æ–ø–∫–∏
    button_frame = tk.Frame(scrollable_frame, bg="#f0f0f0")
    button_frame.pack(pady=15)
    
    def save_resume():
     username = username_entry.get().strip()
     if not username:
         messagebox.showerror("–û—à–∏–±–∫–∞", "‚ùå –í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è GitHub!")
         return
     
     # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∑—é–º–µ
     resume_content = generate_resume(
         username,
         skills_entry.get(),
         experience_entry.get(),
         education_entry.get()
     )
     
     # –£–ù–ò–ö–ê–õ–¨–ù–û–ï –ò–ú–Ø –° –î–ê–¢–û–ô –ò –í–†–ï–ú–ï–ù–ï–ú
     current_time = datetime.now().strftime("%Y%m%d_%H%M%S")  # –ì–æ–¥–ú–µ—Å—è—Ü–î–µ–Ω—å_–ß–∞—Å–ú–∏–Ω—É—Ç–∞–°–µ–∫—É–Ω–¥–∞
     filename = f"RESUME_{username}_{current_time}.md"
     
     file_path = filedialog.asksaveasfilename(
         defaultextension=".md",
         filetypes=[("Markdown files", "*.md"), ("All files", "*.*")],
         initialfile=filename,  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥—Å—Ç–∞–≤–∏—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è
         title="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—é–º–µ –∫–∞–∫..."
     )
     
     if file_path:
         try:
             with open(file_path, 'w', encoding='utf-8') as file:
                 file.write(resume_content)
             
             # –û–±–Ω–æ–≤–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
             show_success_instruction(username, file_path)
             
             # –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–∞–ø–∫—É —Å —Ñ–∞–π–ª–æ–º
             os.startfile(os.path.dirname(file_path))
             
         except Exception as e:
             messagebox.showerror("–û—à–∏–±–∫–∞", f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª: {e}")
            
    def open_github():
        webbrowser.open("https://github.com")
        messagebox.showinfo(
            "GitHub", 
            "–û—Ç–∫—Ä—ã—Ç–∞ –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ GitHub.\n\n"
            "–ï—Å–ª–∏ —É –≤–∞—Å –µ—â–µ –Ω–µ—Ç —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è:\n"
            "1. –ù–∞–∂–º–∏—Ç–µ '+' ‚Üí 'New repository'\n"
            "2. –ù–∞–∑–æ–≤–∏—Ç–µ 'resume' –∏–ª–∏ 'portfolio'\n"
            "3. –°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"
        )
    
    def show_success_instruction(username, file_path):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –æ–∫–Ω–µ"""
        instruction_window = tk.Toplevel(window)
        instruction_window.title("‚úÖ –ê–Ω–∫–µ—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!")
        instruction_window.geometry("600x500")
        instruction_window.configure(bg="#f0f0f0")
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        tk.Label(
            instruction_window, 
            text="üéâ –ê–Ω–∫–µ—Ç–∞ —É—Å–ø–µ—à–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!", 
            font=("Arial", 14, "bold"),
            bg="#f0f0f0",
            fg="green"
        ).pack(pady=10)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ
        info_text = f"""üìÅ **–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Ñ–∞–π–ª:** 
RESUME_{username}.md

üìÇ **–ü–∞–ø–∫–∞:**
{os.path.dirname(file_path)}

"""
        
        tk.Label(
            instruction_window, 
            text=info_text,
            font=("Arial", 10),
            bg="#f0f0f0",
            justify="left"
        ).pack(pady=5)
        
        # –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
        instruction_label = tk.Label(
            instruction_window, 
            text="üìã –ü–û–®–ê–ì–û–í–ê–Ø –ò–ù–°–¢–†–£–ö–¶–ò–Ø:",
            font=("Arial", 11, "bold"),
            bg="#f0f0f0"
        )
        instruction_label.pack(pady=5)
        
        instruction_text = scrolledtext.ScrolledText(
            instruction_window,
            wrap=tk.WORD,
            width=70,
            height=15,
            font=("Arial", 9)
        )
        instruction_text.pack(padx=10, pady=5, fill="both", expand=True)
        
        instruction_content = """–®–ê–ì 1: –û–¢–ö–†–û–ô–¢–ï GITHUB
‚Ä¢ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–û—Ç–∫—Ä—ã—Ç—å GitHub¬ª –Ω–∏–∂–µ
‚Ä¢ –ò–ª–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://github.com –≤—Ä—É—á–Ω—É—é

–®–ê–ì 2: –°–û–ó–î–ê–ô–¢–ï/–û–¢–ö–†–û–ô–¢–ï –†–ï–ü–û–ó–ò–¢–û–†–ò–ô
‚Ä¢ –ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ—Ç —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è:
  1. –ù–∞–∂–º–∏—Ç–µ ¬´+¬ª –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É
  2. –í—ã–±–µ—Ä–∏—Ç–µ ¬´New repository¬ª
  3. –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: resume –∏–ª–∏ my-portfolio
  4. –ù–∞–∂–º–∏—Ç–µ ¬´Create repository¬ª

‚Ä¢ –ï—Å–ª–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É–∂–µ –µ—Å—Ç—å:
  1. –û—Ç–∫—Ä–æ–π—Ç–µ –≤–∞—à —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
  2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è

–®–ê–ì 3: –ó–ê–ì–†–£–ó–ò–¢–ï –§–ê–ô–õ –ê–ù–ö–ï–¢–´
1. –ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –Ω–∞–∂–º–∏—Ç–µ ¬´Add file¬ª
2. –í—ã–±–µ—Ä–∏—Ç–µ ¬´Upload files¬ª
3. –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª RESUME_–í–ê–®–ï_–ò–ú–Ø.md –≤ –æ–∫–Ω–æ
4. –ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ ¬´choose your files¬ª –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª

–®–ê–ì 4: –°–û–•–†–ê–ù–ò–¢–ï –ò–ó–ú–ï–ù–ï–ù–ò–Ø
1. –ü—Ä–æ–∫—Ä—É—Ç–∏—Ç–µ –≤–Ω–∏–∑ –¥–æ —Ä–∞–∑–¥–µ–ª–∞ ¬´Commit changes¬ª
2. –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ: ¬´Add resume¬ª
3. –ù–∞–∂–º–∏—Ç–µ ¬´Commit changes¬ª

–®–ê–ì 5: –ü–†–û–í–ï–†–¨–¢–ï –†–ï–ó–£–õ–¨–¢–ê–¢
‚Ä¢ –í–∞—à–µ —Ä–µ–∑—é–º–µ —Ç–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É:
  https://github.com/–í–ê–®_–õ–û–ì–ò–ù/–ù–ê–ó–í–ê–ù–ò–ï_–†–ï–ü–û–ó–ò–¢–û–†–ò–Ø

üí° –°–û–í–ï–¢–´:
‚Ä¢ –ù–∞–∑–æ–≤–∏—Ç–µ —Ñ–∞–π–ª README.md —á—Ç–æ–±—ã –æ–Ω –ø–æ–∫–∞–∑—ã–≤–∞–ª—Å—è –Ω–∞ –≥–ª–∞–≤–Ω–æ–π
‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∞—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö
‚Ä¢ –û–±–Ω–æ–≤–ª—è–π—Ç–µ —Ä–µ–∑—é–º–µ –ø–æ –º–µ—Ä–µ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –æ–ø—ã—Ç–∞"""
        
        instruction_text.insert(tk.END, instruction_content)
        instruction_text.config(state=tk.DISABLED)  # –¢–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è
    
        # –ö–Ω–æ–ø–∫–∏ –≤ –æ–∫–Ω–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
        button_frame = tk.Frame(instruction_window, bg="#f0f0f0")
        button_frame.pack(pady=10)
        
        tk.Button(
            button_frame,
            text="üåê –û—Ç–∫—Ä—ã—Ç—å GitHub",
            command=open_github,
            font=("Arial", 10, "bold"),
            bg="#2196F3",
            fg="white",
            width=15
        ).pack(side="left", padx=5)
        
        tk.Button(
            button_frame,
            text="üìÇ –û—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É —Å —Ñ–∞–π–ª–æ–º",
            command=lambda: os.startfile(os.path.dirname(file_path)),
            font=("Arial", 10),
            bg="#4CAF50",
            fg="white",
            width=20
        ).pack(side="left", padx=5)
        
        tk.Button(
            button_frame,
            text="‚ùå –ó–∞–∫—Ä—ã—Ç—å",
            command=instruction_window.destroy,
            font=("Arial", 10),
            bg="#f44336",
            fg="white",
            width=10
        ).pack(side="left", padx=5)
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    tk.Button(
        button_frame,
        text="üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ê–Ω–∫–µ—Ç—É –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä",
        command=save_resume,
        font=("Arial", 11, "bold"),
        bg="#4CAF50",
        fg="white",
        width=30,
        height=2
    ).pack(pady=10)
    
    tk.Button(
        button_frame,
        text="üåê –û—Ç–∫—Ä—ã—Ç—å GitHub",
        command=open_github,
        font=("Arial", 10, "bold"),
        bg="#2196F3",
        fg="white",
        width=30,
        height=2
    ).pack(pady=5)
    
    # –ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
    short_instruction = """üí° –ö–ê–ö –ü–û–õ–¨–ó–û–í–ê–¢–¨–°–Ø:
1. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª—è —Å–ª–µ–≤–∞
2. –ù–∞–∂–º–∏—Ç–µ ¬´–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ê–Ω–∫–µ—Ç—É¬ª
3. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ"""

    tk.Label(
        scrollable_frame, 
        text=short_instruction,
        font=("Arial", 9),
        bg="#e8f5e8",
        relief="solid",
        borderwidth=1,
        padx=10,
        pady=10,
        justify="left"
    ).pack(pady=10, fill="x")
    
    # –£–ø–∞–∫–æ–≤–∫–∞ canvas –∏ scrollbar
    canvas.pack(side="left", fill="both", expand=True)
    scrollbar.pack(side="right", fill="y")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –∫–æ–ª–µ—Å–∏–∫–æ–º –º—ã—à–∏
    def on_mousewheel(event):
        canvas.yview_scroll(int(-1*(event.delta/120)), "units")
    
    canvas.bind_all("<MouseWheel>", on_mousewheel)
    
    # –§–æ–∫—É—Å –Ω–∞ –ø–µ—Ä–≤–æ–µ –ø–æ–ª–µ
    username_entry.focus()
    
    window.mainloop()

if __name__ == "__main__":
    create_gui()