import tkinter as tk
from tkinter import messagebox, filedialog
import webbrowser
from datetime import datetime
import os

def generate_resume(username, skills, experience, education):
    resume_content = f"""# üéØ –ê–Ω–∫–µ—Ç–∞ {username}

## üë§ –û–±–æ –º–Ω–µ
–ü—Ä–∏–≤–µ—Ç! –Ø {username}, –Ω–∞—á–∏–Ω–∞—é—â–∏–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫.

## üõ†Ô∏è –ù–∞–≤—ã–∫–∏
{skills}

## üíº –û–ø—ã—Ç 
{experience}

## üéì –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
{education}

## üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
- **–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è**: {datetime.now().strftime("%d.%m.%Y %H:%M")}
- **–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞**: GitHub

## üîó –°—Å—ã–ª–∫–∏
- [–ú–æ–π GitHub](https://github.com/{username})

---
*–ê–Ω–∫–µ—Ç–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏* üöÄ
"""
    return resume_content

def create_gui():
    window = tk.Tk()
    window.title("üöÄ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ê–Ω–∫–µ—Ç –¥–ª—è GitHub")
    window.geometry("600x500")
    window.configure(bg="#f0f0f0")
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    title_label = tk.Label(
        window, 
        text="üìù –°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ—é –ê–Ω–∫–µ—Ç—É –¥–ª—è GitHub", 
        font=("Arial", 14, "bold"),
        bg="#f0f0f0"
    )
    title_label.pack(pady=20)
    
    # –§—Ä–µ–π–º –¥–ª—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
    input_frame = tk.Frame(window, bg="#f0f0f0")
    input_frame.pack(padx=20, pady=10, fill="both", expand=True)
    
    # –ü–æ–ª–µ –¥–ª—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è GitHub
    tk.Label(input_frame, text="üë§ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è GitHub:", 
             bg="#f0f0f0", font=("Arial", 10)).grid(row=0, column=0, sticky="w", pady=8)
    username_entry = tk.Entry(input_frame, width=40, font=("Arial", 10))
    username_entry.grid(row=0, column=1, pady=8, padx=10)
    
    # –ü–æ–ª–µ –¥–ª—è –Ω–∞–≤—ã–∫–æ–≤
    tk.Label(input_frame, text="üõ†Ô∏è –í–∞—à–∏ –Ω–∞–≤—ã–∫–∏:", 
             bg="#f0f0f0", font=("Arial", 10)).grid(row=1, column=0, sticky="w", pady=8)
    skills_entry = tk.Entry(input_frame, width=40, font=("Arial", 10))
    skills_entry.grid(row=1, column=1, pady=8, padx=10)
    
    # –ü–æ–ª–µ –¥–ª—è –æ–ø—ã—Ç–∞ —Ä–∞–±–æ—Ç—ã
    tk.Label(input_frame, text="üíº –û–ø—ã—Ç:", 
             bg="#f0f0f0", font=("Arial", 10)).grid(row=2, column=0, sticky="w", pady=8)
    experience_entry = tk.Entry(input_frame, width=40, font=("Arial", 10))
    experience_entry.grid(row=2, column=1, pady=8, padx=10)
    
    # –ü–æ–ª–µ –¥–ª—è –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
    tk.Label(input_frame, text="üéì –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ:", 
             bg="#f0f0f0", font=("Arial", 10)).grid(row=3, column=0, sticky="w", pady=8)
    education_entry = tk.Entry(input_frame, width=40, font=("Arial", 10))
    education_entry.grid(row=3, column=1, pady=8, padx=10)
    
    def save_resume():
        username = username_entry.get().strip()
        if not username:
            messagebox.showerror("–û—à–∏–±–∫–∞", "‚ùå –í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è GitHub!")
            return
        
        resume_content = generate_resume(
            username,
            skills_entry.get(),
            experience_entry.get(),
            education_entry.get()
        )
        
        current_time = datetime.now().strftime("%Y%m%d_%H%M%S")
        filename = f"RESUME_{username}_{current_time}.md"
        
        file_path = filedialog.asksaveasfilename(
            defaultextension=".md",
            filetypes=[("Markdown files", "*.md"), ("All files", "*.*")],
            initialfile=filename
        )
        
        if file_path:
            try:
                with open(file_path, 'w', encoding='utf-8') as file:
                    file.write(resume_content)
                
                messagebox.showinfo("–£—Å–ø–µ—Ö!", f"‚úÖ –ê–Ω–∫–µ—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!\n–§–∞–π–ª: {filename}")
                os.startfile(os.path.dirname(file_path))
                
            except Exception as e:
                messagebox.showerror("–û—à–∏–±–∫–∞", f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
    
    def open_github():
        webbrowser.open("https://github.com")
    
    # –ö–Ω–æ–ø–∫–∏
    button_frame = tk.Frame(window, bg="#f0f0f0")
    button_frame.pack(pady=20)
    
    tk.Button(
        button_frame,
        text="üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ê–Ω–∫–µ—Ç—É",
        command=save_resume,
        font=("Arial", 11, "bold"),
        bg="#4CAF50",
        fg="white",
        width=20
    ).pack(pady=10)
    
    tk.Button(
        button_frame,
        text="üåê –û—Ç–∫—Ä—ã—Ç—å GitHub",
        command=open_github,
        font=("Arial", 10),
        bg="#2196F3",
        fg="white",
        width=20
    ).pack(pady=5)
    
    window.mainloop()

    

if __name__ == "__main__":
    create_gui()